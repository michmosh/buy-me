{"version":3,"sources":["main/style.css","counter-card/style.css","list/style.css","dropdown/dropdown.js","list/list.js","counter-card/caunter-card.js","main/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","list","message","cardWrapper","card","title","horizontalSeperator","listWrapper","addButton","data","input","Dropdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectElement","bind","assertThisInitialized","toggleDropDown","cancel","state","dropDownOpen","selected","config","setState","event","el","toggle","arguments","length","undefined","stopPropagation","selectedDropDown","_this2","react_default","a","createElement","className","style","width","position","display","onClick","name","isCancelSelected","placeholder","map","index","key","value","keys","displayKeys","src","alt","React","Component","List","handleChange","openAddTaskLi","addNew","addTaskOpen","newTaskObject","status","nextProps","prevState","changedValue","task","toConsumableArray","addTask","styles","titles","onChange","target","Date","toLocaleString","id","onBlur","dropdown_Dropdown","created_at","deleteTask","CounterCard","Main","apiUrl","compleated","due","showMessage","type","text","getData","toLowerCase","axios","get","then","res","tasks","setTasksCounters","_this3","put","concat","promptMessage","_this4","delete","splice","_this5","post","push","updateTask","_this6","setTimeout","_this7","caunter_card","backgroundColor","visibility","opacity","fontSize","color","App","main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e034e08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"_2GunwoBWdX6-ljGihXwy-x\",\"message\":\"_2xcTd5CD_cVE1weCm-4aA0\",\"cardWrapper\":\"_3c7c0J95l59EJloix0QGZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"_3wJaCHtmgIZUdDMeC95Df6\",\"title\":\"_1PLZv7HQv0xElr-JLag6Zo\",\"horizontalSeperator\":\"_2G4qNhA2R25coQzX6rYV4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"_26rVZdntNHdZ-hwupQyjvD\",\"listWrapper\":\"_3Oxd0pOrZkCAE5_Z8869hF\",\"addButton\":\"_3sCYgH8G5j18TePGclWUhL\",\"data\":\"_2E34BCsAeJBzyeADqz7P0n\",\"title\":\"_2WKXyK8z_t3X6-o_lZ84fL\",\"input\":\"_2DOqvBvZRBzrEk_La3H18T\"};","import React from 'react';\r\nimport './dropdown.css';\r\n\r\nexport default class Dropdown extends React.Component{\r\n   \r\n    constructor(props){\r\n        super(props);\r\n        this.selectElement = this.selectElement.bind(this);\r\n        this.toggleDropDown = this.toggleDropDown.bind(this);\r\n        this.cancel = this.cancel.bind(this);\r\n        this.state = {\r\n            data : [],\r\n            dropDownOpen : false,\r\n            selected : props.config.selected\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({data : this.props.config.data});\r\n    }\r\n\r\n    selectElement(event ,el , toggle = false){\r\n        event.stopPropagation(); // prevent click through \r\n        this.setState({selected :el});\r\n        this.props.selectedDropDown(el); \r\n        if(toggle )this.toggleDropDown();\r\n    }\r\n\r\n    cancel(event){\r\n        this.setState({selected : false});\r\n        event.stopPropagation(); // prevent click through \r\n        this.selectElement(null ,false )\r\n    }\r\n    toggleDropDown(){\r\n        this.setState({dropDownOpen : !this.state.dropDownOpen})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"dropdown-wrapper\" style={{width: this.props.config.width ? this.props.config.width : '20rem' , position:'relative' }}  >\r\n                <div style={{display:this.state.dropDownOpen ? \"none\" :\"block\" , width:'100%'}} className=\"dropdown-title\">\r\n                    {this.state.selected ? \r\n                        <div className=\"dropdown-item dropdown flex\" onClick={this.toggleDropDown} >\r\n                            <span className=\"dropdown-item-title\">{this.state.selected.name}</span>   \r\n                           {\r\n                               this.props.isCancelSelected ? \r\n                                <i onClick={(event)=>{this.selectElement(event,null, false)}} className=\"fa fa-close\"></i> :\r\n                                ''\r\n                           } \r\n                        </div> \r\n                        : \r\n                        <div className=\"dropdown-item dropdown flex\" onClick={this.toggleDropDown}>\r\n                            <span className=\"dropdown-item-title\">{this.props.config.placeholder}</span>   \r\n                        </div> \r\n                    }\r\n                </div>\r\n                <ul style={{display:this.state.dropDownOpen ? \"block\" :\"none\" }}>\r\n                    {this.state.data.map(( el, index )=>{\r\n                        return(\r\n                            <li className=\"dropdown-item dropdown\" key={index} onClick={(event)=>{this.selectElement(event,el, true)}} value={index}>\r\n                                <div className=\"flex\">\r\n                                    { Object.keys(el).map((key,index)=>{\r\n                                        if(key in this.props.config.displayKeys){\r\n                                            if(this.props.config.displayKeys[key] === \"string\") return <span key={index} className=\"dropdown-item-title\">{el[key]}</span>\r\n                                            if(this.props.config.displayKeys[key] === \"number\") return <span key={index} className=\"dropdown-item-title\">{el[key]}</span>\r\n                                            if(this.props.config.displayKeys[key] === \"image\") return <img key={index} className=\"dropdown-image\" src={el[key]} alt={this.props.config.name}/>\r\n                                        }  \r\n                                        return '';\r\n                                    })}\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// example usage \r\n/* <Dropdown \r\n    config={{\r\n        name:'lng' , \r\n        isServerData : false,\r\n        resKey : null,\r\n        width:'3rem' , \r\n        placeholder:'' , \r\n        displayKeys:{\r\n            name:\"string\",\r\n            flag:\"image\"\r\n        },\r\n        data:[...this.props.config.languages],\r\n        selected:this.props.config.languages[0]\r\n    }}\r\n    selectedDropDown={this.selectedLng}\r\n    isCancelSelected={false}/>\r\n\r\n{this.state.country ? this.state.country.name : ''} */","import React ,{Component} from 'react';\r\nimport styles from './style.css';\r\nimport Dropdown from '../dropdown/dropdown';\r\nclass List extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openAddTaskLi = this.openAddTaskLi.bind(this);\r\n        this.addNew = this.addNew.bind(this);\r\n        \r\n        this.state = {\r\n            data : props.data ,\r\n            addTaskOpen : false,\r\n            newTaskObject : {name:'',status:''}\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(nextProps , prevState){\r\n        return this.state.data === nextProps.data ? null :  this.setState({data:nextProps.data})\r\n    }\r\n    \r\n    handleChange(changedValue,task , index){\r\n        let data = this.state.data;\r\n        data[index].name = changedValue.name \r\n        this.setState({data : [...data]});\r\n    }\r\n\r\n    openAddTaskLi(){\r\n        this.setState({addTaskOpen:true})\r\n    }\r\n\r\n    addNew(){\r\n        this.props.addTask(this.state.newTaskObject);\r\n        this.setState({newTaskObject : {name:'',status:''} ,addTaskOpen:false });\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className={styles.list}>\r\n            <button onClick={this.openAddTaskLi} className={styles.addButton}>Add Task <i className=\"fa fa-plus\"></i></button>\r\n            <ul className={styles.listWrapper}>\r\n                <li className={styles.title}>\r\n                  {\r\n                      this.props.titles.map((title , index)=>{\r\n                          return (\r\n                              <div key={index}>{title}</div>\r\n                          )\r\n                      })\r\n                  }\r\n              </li>\r\n              {\r\n                this.state.addTaskOpen ? \r\n                    <li className={styles.data}>\r\n                        <div>\r\n                            <input \r\n                                value={this.state.newTaskObject.name} \r\n                                className={styles.input} \r\n                                onChange={(event)=>{\r\n                    \r\n                                    this.setState({newTaskObject :{name:event.target.value , status:'due'}})\r\n                                }} \r\n                            />\r\n                            </div>\r\n                              <div>\r\n                                DUE\r\n                              </div>\r\n                              <div>{new Date().toLocaleString(\"es-MX\")}</div>\r\n                              <div> \r\n                                  <button onClick={this.addNew} className={styles.addButton}>\r\n                                    SAVE \r\n                                    <i className=\"fa fa-check-circle\"></i>\r\n                                  </button> \r\n                            </div>\r\n                    </li>\r\n                :\r\n               ''\r\n              }\r\n              {\r\n                  this.state.data.map((task , index)=>{\r\n                      return (\r\n                          <li key={task.id} className={styles.data}>\r\n                              <div>\r\n                                  <input value={task.name} className={styles.input} onBlur={(event)=>this.props.handleChange({name:event.target.value},task , index)} onChange={(event)=>this.handleChange({name:event.target.value},task , index)} />\r\n                            </div>\r\n                              <div>\r\n                              {/* {task.status} */}\r\n                              <Dropdown\r\n                                  config={{\r\n                                      name:'status' , \r\n                                      width:'4rem' , \r\n                                      placeholder:'STATUS' , \r\n                                      displayKeys:{\r\n                                          name:\"string\"\r\n                                      },\r\n                                      data:[\r\n                                          {name:'DONE'},\r\n                                          {name:'DUE'}\r\n                                      ],\r\n                                      selected:{name:task.status}\r\n                                  }}\r\n        \r\n                                  selectedDropDown={(changedValue)=>this.props.handleChange({status:changedValue === null ? changedValue : changedValue.name},task , index)}\r\n                                  isCancelSelected={true}/>\r\n                              </div>\r\n                              <div>{task.created_at}</div>\r\n                              <i onClick={()=>this.props.deleteTask(task , index)}className=\"fa fa-trash\"></i>\r\n                          </li>\r\n                      )\r\n                  })\r\n              }\r\n              </ul>\r\n            </div>\r\n          );\r\n    }\r\n    \r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport styles from './style.css';\r\n\r\nconst CounterCard =(props)=> {\r\n    return (\r\n      <div className={styles.card} style={{width:props.width}}>\r\n        <div className={styles.title}>{props.name}</div>\r\n        <span className={styles.horizontalSeperator}></span>\r\n        <div>{props.data}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CounterCard;\r\n","import React, { Component } from 'react';\r\nimport styles from './style.css';\r\nimport axios from 'axios';\r\nimport List from '../list/list';\r\nimport CounterCard from '../counter-card/caunter-card';\r\n\r\nclass Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.deleteTask = this.deleteTask.bind(this);\r\n        this.addTask = this.addTask.bind(this);\r\n        this.apiUrl = '../public/api/tasks';\r\n        this.state = {\r\n            data : [] ,\r\n            compleated:0,\r\n            due:0 ,\r\n            showMessage : false,\r\n            message:{type:'' , text : ''}\r\n        }\r\n    }\r\n    componentDidMount(){\r\n       this.getData();\r\n    }\r\n\r\n    setTasksCounters(){\r\n        let compleated = 0 , \r\n            due = 0\r\n        this.state.data.map(task=>{\r\n            if(task.status === null) return ++due;\r\n            if(task.status.toLowerCase() === \"done\") return ++compleated ; \r\n            if(task.status.toLowerCase() === \"due\") return ++due ; \r\n        })\r\n        this.setState({compleated:compleated , due : due});\r\n    }\r\n\r\n    getData(){\r\n        axios.get( this.apiUrl)\r\n            .then(res=>{\r\n                this.setState({data : res.data.tasks});\r\n                this.setTasksCounters()\r\n            })\r\n    }\r\n\r\n    updateTask(value ,task, index){\r\n        axios.put(`${this.apiUrl}/${task.id}` , value)\r\n        .then(res=>{\r\n            let data = this.state.data;\r\n            data[index] = res.data.task\r\n            this.setState({data : [...data]});\r\n            this.setTasksCounters();\r\n            this.promptMessage('success' , 'Task updated');\r\n        })\r\n    }\r\n\r\n    deleteTask(task,index){\r\n       axios.delete(`${this.apiUrl}/${task.id}`)\r\n            .then(res=>{\r\n                let data = this.state.data\r\n                data.splice(index ,1)\r\n                this.setState({data : data});\r\n                this.setTasksCounters();\r\n                this.promptMessage('success' , 'Task deleted');\r\n            })\r\n    }\r\n\r\n    addTask(task){\r\n        axios.post(`${this.apiUrl}` ,task)\r\n            .then(res=>{\r\n                let data = this.state.data;\r\n                data.push(res.data.task)\r\n                this.setState({data : [...data]})\r\n                this.setTasksCounters();\r\n                this.promptMessage('success' , 'Task added');\r\n            })\r\n    }\r\n\r\n    handleChange(value ,task , index){\r\n        this.updateTask(value , task, index)\r\n    }\r\n    promptMessage(type , message){\r\n        this.setState({\r\n            showMessage : true,\r\n            message:{type:type , text : message}\r\n        })\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                showMessage : false,\r\n                message:{type:'' , text : ''}\r\n            })\r\n        },1500)\r\n        \r\n    }\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n      <div className={styles.list}>\r\n        <div className={styles.cardWrapper}>\r\n            <CounterCard data={this.state.compleated} name=\"compleated\" width=\"10rem\"/>\r\n            <CounterCard data={this.state.due} name=\"due\" width=\"10rem\"/>\r\n            <CounterCard data={this.state.data.length} name=\"total\" width=\"10rem\"/>\r\n        </div>\r\n        <List \r\n            data={this.state.data} titles={['Name' , 'Status' , 'Date' , 'delete']} \r\n            handleChange={(value ,task , index)=>this.handleChange(value ,task , index)}\r\n            deleteTask={(task , index)=>this.deleteTask(task,index)}\r\n            addTask={(task )=>this.addTask(task)}\r\n        />\r\n      </div>\r\n        {\r\n            <div \r\n                className={styles.message} \r\n                style={{\r\n                    backgroundColor:this.state.message.type === 'error' ? 'red' : 'green' , \r\n                    visibility:this.state.showMessage ? 'visible':'hidden',\r\n                    opacity:this.state.showMessage ? '0.9':'0'}}>\r\n                <p style={{fontSize:'2em' , color:'white'}}> {this.state.message.text}</p>\r\n            </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport Main from './main/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"dark-blue\">\n        <div className=\"logo\">Tasks</div>\n        <div className=\"hamburger-wrapper\">\n            <div className='hamburger'>\n                <span></span>\n                <span></span>\n                <span></span>\n            </div>\n        </div>\n        </header>\n        <Main />\n        <div className=\"side-nav dark-blue\">\n         <ul>\n           <li>Link 1</li>\n           <li>Link 1</li>\n           <li>Link 1</li>\n           <li>Link 1</li>\n         </ul>\n        </div>\n        <footer className=\"dark-blue\"></footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'font-awesome/css/font-awesome.min.css';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}